services:
  banking-system-discovery-service:
    build: ./discovery-service
    container_name: banking-system-discovery-service
    ports:
      - "8761:8761"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "${DISCOVERY_SERVICE_HEALTH_URL}"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 90s

  banking-system-configs-service:
    build: ./configs-service
    container_name: banking-system-configs-service
    ports:
      - "8011:8011"
    environment:
      - DISCOVERY_SERVICE_URL=${ENV_DISCOVERY_SERVICE_URL}
    depends_on:
      banking-system-discovery-service:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "${CONFIG_SERVICE_HEALTH_URL}"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 90s

  banking-system-customer-service:
    build: ./customer-service
    container_name: banking-system-customer-service
    ports:
      - "8014:8014"
    environment:
      - DISCOVERY_SERVICE_URL=${ENV_DISCOVERY_SERVICE_URL}
      - CONFIG_SERVICE_URL=${ENV_CONFIG_SERVICE_URL}
      - DATABASE_HOST=mysql-db
      - DATABASE_PORT=3306
      - DATABASE_NAME=${MYSQL_DATABASE}
      - DATABASE_USER=${MYSQL_USER}
      - DATABASE_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      mysql-db:
        condition: service_healthy
      banking-system-configs-service:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "${CUSTOMER_SERVICE_HEALTH_URL}"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 90s

  mysql-db:
    image: mysql:8.0
    container_name: customers_service_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - database
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 90s

  banking-system-account-service:
    build: ./account-service
    container_name: banking-system-account-service
    ports:
      - "8015:8015"
    environment:
      - DISCOVERY_SERVICE_URL=${ENV_DISCOVERY_SERVICE_URL}
      - CONFIG_SERVICE_URL=${ENV_CONFIG_SERVICE_URL}
      - DATABASE_HOST=postgres-db
      - DATABASE_PORT=5432
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      postgres-db:
        condition: service_healthy
      banking-system-configs-service:
        condition: service_healthy
      banking-system-customer-service:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "${ACCOUNT_SERVICE_HEALTH_URL}"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 90s

  postgres-db:
    image: postgres:15
    container_name: account_service_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - database
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 90s

  banking-system-gateway-service:
    build: ./gateway-service
    container_name: banking-system-gateway-service
    ports:
      - "8010:8010"
    environment:
      - DISCOVERY_SERVICE_URL=${ENV_DISCOVERY_SERVICE_URL}
      - CONFIG_SERVICE_URL=${ENV_CONFIG_SERVICE_URL}
    depends_on:
      banking-system-configs-service:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "${GATEWAY_SERVICE_HEALTH_URL}"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 90s

  banking-system-angular-frontend:
    build: ./bs-frontend
    container_name: banking-system-angular-frontend
    ports:
      - '80:80'
    expose:
      - '80'

volumes:
  mysql_data:
  postgres_data:

networks:
  backend:
    driver: bridge
  database:
    driver: bridge
